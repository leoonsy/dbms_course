{"version":3,"sources":["scripts/main.min.js"],"names":["$","baseApiPath","acl","url","method","dataType","async","success","data","index","title","type","editable","width","customers","resizable","sortable","tbar","update","key","text","action","emptyText","paramsMenu","paramsText","item","tbarOrders","filter","parse","JSON","stringify","tbarCustomers","tbarProducts","clicksToEdit","i18n","renderTo","FancyTab","proxy","afterRequest","items","defaults","columns","cols","updateAfterRequest","categories","paging","products","concat","orders","activeTab","i","grid","o","length","undefined","load"],"mappings":"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","file":"main.min.js","sourcesContent":["$(function () {\r\n    let baseApiPath = \"core/api.php\";\r\n    let acl = [];\r\n\r\n    $.ajax({\r\n        url: 'core/api.php?acl',\r\n        method: 'get',\r\n        dataType: 'json',\r\n        async: false,\r\n        success: (data) => {\r\n            acl = data;\r\n        }\r\n    });\r\n\r\n    let cols = {\r\n        categories: [{\r\n            index: 'id',\r\n            title: 'ID',\r\n            type: 'number',\r\n            locked: true,\r\n            width: 50,\r\n            editable: false\r\n        }, {\r\n            index: 'name',\r\n            title: 'Имя',\r\n            type: 'string',\r\n            width: 200\r\n        }],\r\n        products: [{\r\n            index: 'id',\r\n            title: 'ID',\r\n            type: 'number',\r\n            locked: true,\r\n            width: 50,\r\n            editable: false\r\n        }, {\r\n            index: 'category_id',\r\n            title: 'ID категории',\r\n            type: 'number',\r\n            width: 110\r\n        }, {\r\n            index: 'name',\r\n            title: 'Имя',\r\n            type: 'string',\r\n            width: 200\r\n        }, {\r\n            index: 'price',\r\n            title: 'Цена',\r\n            type: 'number',\r\n            width: 80\r\n        }, {\r\n            index: 'count',\r\n            title: 'Количество',\r\n            type: 'string',\r\n            width: 90\r\n        }],\r\n        orders: [{\r\n            index: 'id',\r\n            title: 'ID',\r\n            type: 'number',\r\n            locked: true,\r\n            width: 50,\r\n            editable: false\r\n        }, {\r\n            index: 'customer_id',\r\n            title: 'ID покупателя',\r\n            type: 'number',\r\n            width: 110\r\n        }, {\r\n            index: 'product_id',\r\n            title: 'ID товара',\r\n            type: 'number',\r\n            width: 80\r\n        }, {\r\n            index: 'product_count',\r\n            title: 'Количество товаров',\r\n            type: 'number',\r\n            width: 150\r\n        }, {\r\n            index: 'price',\r\n            title: 'Цена',\r\n            type: 'number',\r\n            width: 80\r\n        }],\r\n        customers: [{\r\n            index: 'id',\r\n            title: 'ID',\r\n            type: 'number',\r\n            locked: true,\r\n            width: 50,\r\n            editable: false\r\n        }, {\r\n            index: 'first_name',\r\n            title: 'Имя',\r\n            type: 'string'\r\n        }, {\r\n            index: 'last_name',\r\n            title: 'Фамилия',\r\n            type: 'string'\r\n        }]\r\n    };\r\n\r\n    let defaults = {\r\n        type: 'string',\r\n        width: 150,\r\n        resizable: true,\r\n        sortable: true,\r\n        editable: acl.update\r\n    }\r\n\r\n    let tbar = [{\r\n        key: 'insert',\r\n        text: 'Добавить',\r\n        action: 'add'\r\n    }, {\r\n        key: 'delete',\r\n        text: 'Удалить',\r\n        action: 'remove',\r\n        tip: 'Выделите строки для удаления'\r\n    }, {\r\n        key: 'search',\r\n        type: 'search',\r\n        width: 350,\r\n        emptyText: 'Поиск',\r\n        paramsMenu: true,\r\n        paramsText: 'Параметры'\r\n    }];\r\n\r\n    //отключаем кнопки в зависимости от прав доступа\r\n    tbar = tbar.filter((item, index, array) => {\r\n        return !(acl[item.key] === false);\r\n    });\r\n\r\n    //кнопки должны быть в отдельной памяти для каждой таблицы (так как привязывается к таблице)\r\n    let tbarProducts = JSON.parse(JSON.stringify(tbar));\r\n    let tbarOrders = JSON.parse(JSON.stringify(tbar));\r\n    let tbarCustomers = JSON.parse(JSON.stringify(tbar));\r\n\r\n    let paging = {\r\n        pageSize: 20,\r\n        pageSizeData: [5, 10, 20, 50, 100, 500, 1000]\r\n    };\r\n\r\n    let clicksToEdit = 2,\r\n        i18n = 'ru';\r\n\r\n    let grid = new FancyTab({\r\n        resizable: false,\r\n        renderTo: 'mainTable',\r\n        title: 'База данных компьютерного магазина',\r\n        height: 650,\r\n        trackOver: true,\r\n        items: [{\r\n            title: 'Категории',\r\n            selModel: 'rows',\r\n            type: 'grid',\r\n            data: {\r\n                proxy: {\r\n                    type: 'rest',\r\n                    url: `${baseApiPath}?table=categories`,\r\n                    afterRequest: updateAfterRequest\r\n                }\r\n            },\r\n            defaults: defaults,\r\n            columns: cols.categories,\r\n            tbar: tbar,\r\n            clicksToEdit: clicksToEdit,\r\n            paging: paging,\r\n            i18n: i18n\r\n        },\r\n        {\r\n            title: 'Продукты',\r\n            selModel: 'rows',\r\n            type: 'grid',\r\n            data: {\r\n                proxy: {\r\n                    type: 'rest',\r\n                    url: `${baseApiPath}?table=products`,\r\n                    afterRequest: updateAfterRequest\r\n                }\r\n            },\r\n            defaults: defaults,\r\n            columns: cols.products,\r\n            tbar: tbarProducts,\r\n            clicksToEdit: clicksToEdit,\r\n            paging: paging,\r\n            i18n: i18n\r\n        },\r\n        {\r\n            title: 'Заказы',\r\n            selModel: 'rows',\r\n            type: 'grid',\r\n            data: {\r\n                proxy: {\r\n                    type: 'rest',\r\n                    url: `${baseApiPath}?table=orders`,\r\n                    afterRequest: updateAfterRequest\r\n                }\r\n            },\r\n            defaults: defaults,\r\n            columns: cols.orders,\r\n            tbar: tbarOrders,\r\n            clicksToEdit: clicksToEdit,\r\n            paging: paging,\r\n            i18n: i18n\r\n        },\r\n        {\r\n            title: 'Покупатели',\r\n            selModel: 'rows',\r\n            type: 'grid',\r\n            data: {\r\n                proxy: {\r\n                    type: 'rest',\r\n                    url: `${baseApiPath}?table=customers`,\r\n                    afterRequest: updateAfterRequest\r\n                }\r\n            },\r\n            defaults: defaults,\r\n            columns: cols.customers,\r\n            tbar: tbarCustomers,\r\n            clicksToEdit: clicksToEdit,\r\n            paging: paging,\r\n            i18n: i18n\r\n        }\r\n        ]\r\n    })\r\n\r\n    //обновляет вкладки (кроме текущей) после удаления строк\r\n    function updateAfterRequest(o) {\r\n        if (o.type == 'destroy') {\r\n            let activeTab = grid.activeTab;\r\n            if (activeTab != 0 && activeTab != 3) //рассматриваем только \"категории\" и \"покупатели\" (для оптимизации)\r\n                return o;\r\n\r\n            for (let i = 0; i < grid.items.length; i++) {\r\n                if (i != activeTab && grid.items[i].load != undefined) {\r\n                    grid.items[i].load(); //запрос к серверу для получения данных\r\n                }\r\n            }\r\n        }\r\n        return o;\r\n    }\r\n});"]}